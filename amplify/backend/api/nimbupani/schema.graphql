type MentorModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  MenteeModels: [MenteeModel] @hasMany(indexName: "byMentorModel", fields: ["id"])
}

type MenteeModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  mentormodelID: ID! @index(name: "byMentorModel")
}

type MentorRelation @model @auth(rules: [{allow: public}]) {
  id: ID!
  menteeID: ID
  mentorID: ID
}

type Mentee @model @auth(rules: [{allow: public}]) {
  id: ID!
  User: User @hasOne
  mentorID: ID! @index(name: "byMentor")
}

type Mentor @model @auth(rules: [{allow: public}]) {
  id: ID!
  User: User @hasOne
  Mentees: [Mentee] @hasMany(indexName: "byMentor", fields: ["id"])
}

type Message @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String
  userID: ID! @index(name: "byUser")
  chatroomID: ID! @index(name: "byChatRoom")
  image: String
  audio: String
}

type ChatRoom @model @auth(rules: [{allow: public}]) {
  id: ID!
  newMessages: Int
  LastMessage: Message @hasOne
  Messages: [Message] @hasMany(indexName: "byChatRoom", fields: ["id"])
  ChatRoomUsers: [User] @manyToMany(relationName: "ChatRoomUser")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  imageUri: String
  status: String
  Messages: [Message] @hasMany(indexName: "byUser", fields: ["id"])
  ChatRooms: [ChatRoom] @manyToMany(relationName: "ChatRoomUser")
  type: String
}
 